{"version":3,"sources":["search.js","components/PKMNSelect.js","components/Sprite.js","components/Header.js","components/PKMNEntry.js","App.js","index.js"],"names":["getDistinctMoves","pokemon","Pokedex","eggMoves","egg_moves","learnedMoves","learnedMovesObject","moveset","level","Array","isArray","forEach","move","push","getMoveset","allMoves","concat","Object","toConsumableArray","Set","console","log","sortByID","pokemonArray","sort","a","b","id","removeSelf","pokemonName","filter","name","compareArrays","array1","array2","array3","arguments","length","undefined","array4","finalArray","element1","element2","element3","element4","searchableName","replace","toLowerCase","Search","byEggGroup","eggGroup","inGroup","egg_groups","byMove","searchArray","hasMove","moveName","_loop","byPokemon","pkmn","byEggAndMove","eggGroup1","eggGroup2","byMoves","byEggGroup1","byEggGroup2","includes","forEggMoves","relatedPokemonGroup1","relatedPokemonGroup2","combine","evolutions","isEggChain","entry","createQuickestEggChain","chain","firstPass","moveGroup","breedables","continueChain","endOfChain","pokemonNames","createMultiEggChain","moves","moveGroups","matches","PKMNSelect","props","options","react_default","createElement","value","display_name","key","className","onChange","e","searchByPokemon","target","Sprite","imageName","src","process","alt","title","Header","PKMNEntry","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","populateMoves","clone","state","compareMoves","checked","setState","displayEggChains","searchName","displayLearnedMoves","displayCheckboxes","displayEggMoves","moveList","_this2","inputs","type","_this3","sprites","searchEggMoves","map","onClick","_this$props","listedPokemon","spriteDisplay","Component","App","window","scrollTo","history","react_router","path","route","render","_ref","match","components_PKMNEntry","params","createBrowserHistory","ReactDOM","basename","src_App","document","getElementById"],"mappings":"yhzrBAEA,SAASA,EAAiBC,GACxB,GAAIC,EAAQD,GAAU,CACpB,IAAIE,EAAWD,EAAQD,GAASG,UAAYF,EAAQD,GAASG,UAAY,GACrEC,EASR,SAAoBJ,GAClB,IAAIK,EAAqBJ,EAAQD,GAASM,QACtCF,EAAe,GACnB,IAAK,IAAIG,KAASF,EACZG,MAAMC,QAAQR,EAAQD,GAASM,QAAQC,IACzCN,EAAQD,GAASM,QAAQC,GAAOG,QAAQ,SAAAC,GACtCP,EAAaQ,KAAKD,KAGpBP,EAAaQ,KAAKX,EAAQD,GAASM,QAAQC,IAG/C,OAAOH,EArBcS,CAAWb,GAC1Bc,EAAWZ,EAASa,OAAOX,GAC/B,OAAOY,OAAAC,EAAA,EAAAD,CAAI,IAAIE,IAAIJ,IAGnB,OADAK,QAAQC,IAAR,+BAAAL,OAA2Cf,IACpC,GAmBX,SAASqB,EAASC,GAChB,OAAOA,EAAaC,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,GAAKD,EAAEC,KAG9C,SAASC,EAAWL,EAAcM,GAChC,OAAON,EAAaO,OAAO,SAAA7B,GAAO,OAAIA,EAAQ8B,OAASF,IASzD,SAASG,EAAcC,EAAQC,GAAsC,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArB,KAAMG,EAAeH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KACzDI,EAAa,GAyBjB,OAxBAP,EAAOtB,QAAQ,SAAA8B,GACbP,EAAOvB,QAAQ,SAAA+B,GACTP,EACFA,EAAOxB,QAAQ,SAAAgC,GAETJ,EACFA,EAAO5B,QAAQ,SAAAiC,GACTH,IAAaC,GAAYA,IAAaC,GAAYA,IAAaC,GACjEJ,EAAW3B,KAAK4B,KAIhBA,IAAaC,GAAYA,IAAaC,GACxCH,EAAW3B,KAAK4B,KAKlBA,IAAaC,GACfF,EAAW3B,KAAK4B,OAKjBD,EAGF,SAASK,EAAe5C,GAC7B,OAAOA,EACJ6C,QAAQ,OAAQ,KAChBA,QAAQ,YAAa,IACrBA,QAAQ,UAAM,MACdA,QAAQ,UAAM,MACdC,cAIL,IAAMC,EAAS,CAEbC,WAFa,SAEFC,GACT,IAAIC,EAAU,GACd,IAAK,IAAIlD,KAAWC,EACdA,EAAQD,GAASmD,WAAW,KAAOF,GAAYhD,EAAQD,GAASmD,WAAW,KAAOF,GACpFC,EAAQtC,KAAKX,EAAQD,IAGzB,OAAOkD,GAGTE,OAZa,SAYNzC,GAA6B,IAAvB0C,EAAuBlB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAATlC,EACrBqD,EAAU,GACd,GAAI9C,MAAMC,QAAQ4C,GAChBA,EAAY3C,QAAQ,SAAAV,GACJD,EAAiBC,EAAQ8B,MACjCpB,QAAQ,SAAA6C,GACRA,EAAST,gBAAkBnC,EAAKmC,eAClCQ,EAAQ1C,KAAKX,EAAQD,EAAQ8B,eAI9B,KAAA0B,EAAA,SACIxD,GACOD,EAAiBC,GACzBU,QAAQ,SAAA6C,GACRA,EAAST,gBAAkBnC,EAAKmC,eAClCQ,EAAQ1C,KAAKX,EAAQD,OAJ3B,IAAK,IAAIA,KAAWC,EAASuD,EAApBxD,GASX,OAAOsD,GAGTG,UApCa,SAoCHzD,GACR,IAAK,IAAI0D,KAAQzD,EAAS,CACxB,IAAI6B,EAAOc,EAAe5C,GAC1B,GAAIC,EAAQyD,GAAM5B,OAASA,EACzB,OAAO7B,EAAQyD,KAKrBC,aA7Ca,WA6C0C,IAA1ChD,EAA0CwB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnC,KAAMyB,EAA6BzB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAlBwB,EAAkB1B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KAC3C2B,EAAU,GACVnD,IACFmD,EAAUf,EAAOK,OAAOzC,IAE1B,IAAIqC,EAAa,GACjB,GAAIa,EAAW,CACb,IAAME,EAAchB,EAAOC,WAAWY,GAChCI,EAAcjB,EAAOC,WAAWa,GAEtCb,EAAae,EAAYlC,OAAO,SAAA7B,GAC9B,OAAOgE,EAAYC,SAASjE,UAG9BgD,EAAaD,EAAOC,WAAWY,GAGjC,OAAKjD,EAGIqC,EAAWnB,OAAO,SAAA7B,GACvB,OAAO8D,EAAQG,SAASjE,KAHnBgD,GAQXkB,YAvEa,SAuEDvD,EAAMiB,GAChB,IAAMuC,EAAuBpB,EAAOY,aAAahD,EAAMV,EAAQ2B,GAAauB,WAAW,IAEvF,GAAIlD,EAAQ2B,GAAauB,WAAW,GAAI,CACtC,IAAMiB,EAAuBrB,EAAOY,aAAahD,EAAMV,EAAQ2B,GAAauB,WAAW,IAEnFkB,EAAUF,EAAqBpD,OAAOqD,GAC1C,OAAO/C,EAASL,OAAAC,EAAA,EAAAD,CAAI,IAAIE,IAAImD,KAEvB,GAA2C,iBAAvCpE,EAAQ2B,GAAauB,WAAW,GAAuB,CAChE,GAAIlD,EAAQ2B,GAAa0C,WAAY,CACnC,IAAIxC,EAAOc,EAAe3C,EAAQ2B,GAAa0C,WAAW,GAAG,IAC7D,OAAOvB,EAAOmB,YAAYvD,EAAMmB,GAEhC,MAAO,GAGT,OAAOT,EAAS8C,IAIpBI,WA5Fa,SA4FF5D,EAAMiB,GACf,IAAI4C,EAAQvE,EAAQ2B,GACpB,IAAK4C,EAAMrE,UACT,OAAO,EAET,IAAIoE,GAAa,EAOjB,OANAC,EAAMrE,UAAUO,QAAQ,SAAA6C,GAClBA,IAAa5C,IACf4D,GAAa,KAIVA,GAGTE,uBA3Ga,SA2GU9D,EAAMiB,GAA2C,IAA9B8C,EAA8BvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB,GAAIwC,IAAkBxC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAElEyC,EAAY7B,EAAOmB,YAAYvD,EAAMiB,GAEzC,GAAK+C,EAsBE,CAEL,IAAIE,EAAalD,EAAWiD,EAAWhD,GACnCkD,EAAgBD,EAAWhD,OAAO,SAAA7B,GACpC,OAAO+C,EAAOwB,WAAW5D,EAAMX,EAAQ8B,QAErCiD,EAAaF,EAAWhD,OAAO,SAAA7B,GACjC,OAAQ+C,EAAOwB,WAAW5D,EAAMX,EAAQ8B,QAG1C,OAAIiD,EAAW3C,OACN,CAACnC,EAAQ2B,GAAcmD,EAAW,IAGlChC,EAAO0B,uBAAuB9D,EAAMmE,EAAc,GAAGhD,KAAM,CAACF,IAAc,GAlCnF8C,EAAM9D,KAAKgB,GAEX,IAhK6BoD,EAgKzBH,GAhKyBG,EAgKWN,EAAXE,EA/Jb/C,OAAO,SAAA7B,GACzB,OAAQgF,EAAaf,SAASjE,EAAQ8B,SA+JhCgD,EAAgBD,EAAWhD,OAAO,SAAA7B,GACpC,OAAO+C,EAAOwB,WAAW5D,EAAMX,EAAQ8B,QAErCiD,EAAaF,EAAWhD,OAAO,SAAA7B,GACjC,OAAQ+C,EAAOwB,WAAW5D,EAAMX,EAAQ8B,QAG1C,OAAIiD,EAAW3C,OACb,GAAArB,OAAAC,OAAAC,EAAA,EAAAD,CAAW0D,GAAX,CAAkBK,EAAW,GAAGjD,OAE5BgD,EAAc1C,OACTW,EAAO0B,uBAAuB9D,EAAMmE,EAAc,GAAGhD,KAAM4C,GAAO,GAGlE,CAAC,4HAsBhBO,oBAxJa,SAwJOC,EAAOtD,GAEzB,IAAIuD,EAAa,GACjBD,EAAMxE,QAAQ,SAAAC,GACZwE,EAAWvE,KAAKmC,EAAOmB,YAAYvD,EAAMiB,MAE3C,IAAIwD,EAAU,GACd,OAAQF,EAAM9C,QACZ,KAAK,EAAGgD,EAAUD,EAAY,MAC9B,KAAK,EAAGC,EAAUrD,EAAcoD,EAAW,GAAIA,EAAW,IAAK,MAC/D,KAAK,EAAGC,EAAUrD,EAAcoD,EAAW,GAAIA,EAAW,GAAIA,EAAW,IAAK,MAC9E,KAAK,EAAGC,EAAUrD,EAAcoD,EAAW,GAAIA,EAAW,GAAIA,EAAW,GAAIA,EAAW,IAAK,MAC7F,QAASC,EAAUD,EAErB,OAAOnE,OAAAC,EAAA,EAAAD,CAAI,IAAIE,IAAIS,EAAWyD,EAASxD,OAI5BmB,ICzPA,SAASsC,EAAWC,GACjC,IAAIC,EAAU,GACd,IAAK,IAAIvF,KAAWC,EAClBsF,EAAQ3E,KAAK4E,EAAAhE,EAAAiE,cAAA,UACXC,MAAOzF,EAAQD,GAAS2F,aACxBC,IAAK5F,GAEJC,EAAQD,GAAS2F,eAGtB,OACEH,EAAAhE,EAAAiE,cAAA,OACEI,UAAU,SACVC,SAAU,SAAAC,GAAC,OAAIT,EAAMU,gBAAgBD,EAAEE,OAAOP,SAE9CF,EAAAhE,EAAAiE,cAAA,cACGF,ICjBM,SAASW,EAAOZ,GAC7B,IAAMa,EAAYb,EAAMxD,KACrBe,QAAQ,OAAQ,KAChBA,QAAQ,YAAa,IACrBA,QAAQ,UAAM,MACdA,QAAQ,UAAM,MACdC,cACH,OACE0C,EAAAhE,EAAAiE,cAAA,OACEW,IAAG,GAAArF,OAAKsF,oBAAL,aAAAtF,OAAuCoF,EAAvC,QACHG,IAAKhB,EAAMxD,KACXyE,MAAOjB,EAAMxD,OCRJ,SAAS0E,EAAOlB,GAC7B,OACEE,EAAAhE,EAAAiE,cAAA,UAAQI,UAAU,YAChBL,EAAAhE,EAAAiE,cAACJ,EAAD,CACEW,gBAAiBV,EAAMU,kBAEzBR,EAAAhE,EAAAiE,cAAA,OAAKI,UAAU,YAAf,sQAEIL,EAAAhE,EAAAiE,cAAA,OAAKI,UAAU,iBACfL,EAAAhE,EAAAiE,cAAA,OAAKI,UAAU,UACbL,EAAAhE,EAAAiE,cAACS,EAAD,CACEpE,KAAK,YAHT,gLAFJ,oRC2JS2E,cAjKb,SAAAA,EAAYnB,GAAO,IAAAoB,EAAA,OAAA1F,OAAA2F,EAAA,EAAA3F,CAAA4F,KAAAH,IACjBC,EAAA1F,OAAA6F,EAAA,EAAA7F,CAAA4F,KAAA5F,OAAA8F,EAAA,EAAA9F,CAAAyF,GAAAM,KAAAH,KAAMtB,KA6IR0B,cAAgB,SAACjB,GACf,IAAIkB,EAAQP,EAAKQ,MAAMC,aACvB,GAAIpB,EAAEE,OAAOmB,QACXH,EAAMrG,KAAKmF,EAAEE,OAAOnE,MACpB4E,EAAKW,SAAS,CAAEF,aAAcF,SAE9B,GAAIA,EAAMhD,SAAS8B,EAAEE,OAAOnE,MAAO,CACjC,IAAIqF,EAAeF,EAAMpF,OAAO,SAAAlB,GAC9B,OAAOA,IAASoF,EAAEE,OAAOnE,OAE3B4E,EAAKW,SAAS,CAAEF,sBAEhBhG,QAAQC,IAAI,oDAGhBsF,EAAKY,oBA3JLZ,EAAKQ,MAAQ,CACXC,aAAc,IAHCT,wEAQjB,OACElB,EAAAhE,EAAAiE,cAAA,WAASI,UAAU,SACjBL,EAAAhE,EAAAiE,cAAA,WACED,EAAAhE,EAAAiE,cAACS,EAAD,CAAQpE,KAAM8E,KAAKtB,MAAMiC,aACxBX,KAAKtB,MAAMxD,KACZ0D,EAAAhE,EAAAiE,cAAA,OAAKI,UAAU,SACZe,KAAKtB,MAAM1B,UACXgD,KAAKtB,MAAMzB,UAAX,MAAA9C,OACS6F,KAAKtB,MAAMzB,WACjB,OAGR2B,EAAAhE,EAAAiE,cAAA,OAAKI,UAAU,gCACbL,EAAAhE,EAAAiE,cAAA,WACED,EAAAhE,EAAAiE,cAAA,2BACCmB,KAAKY,oBAAoBZ,KAAKtB,MAAMlF,eAEvCoF,EAAAhE,EAAAiE,cAAA,OAAKI,UAAU,eAAf,+BAEIL,EAAAhE,EAAAiE,cAAA,YACCmB,KAAKtB,MAAMpF,SAAW0G,KAAKa,oBAAsB,6BAIxDjC,EAAAhE,EAAAiE,cAAA,WACED,EAAAhE,EAAAiE,cAAA,WACGmB,KAAKU,oBAER9B,EAAAhE,EAAAiE,cAAA,uBACCmB,KAAKtB,MAAMpF,SACR0G,KAAKc,gBAAgBd,KAAKtB,MAAMpF,UAChC,mFAMQyH,GAAU,IACpBvH,EAAiBwG,KAAKtB,MAAtBlF,aACJ8E,EAAQ,GAFgB1B,EAAA,SAGnBjD,GACHC,MAAMC,QAAQL,EAAaG,IAC7BH,EAAaG,GAAOG,QAAQ,SAAAC,GAC1BuE,EAAMtE,KACJ4E,EAAAhE,EAAAiE,cAAA,OAAKG,IAAG,GAAA7E,OAAKR,EAAL,KAAAQ,OAAcJ,IAAtB,IAAAI,OACOR,EADP,OAEGI,MAKPuE,EAAMtE,KACJ4E,EAAAhE,EAAAiE,cAAA,OAAKG,IAAG,GAAA7E,OAAKR,EAAL,KAAAQ,OAAcX,EAAaG,KAAnC,IAAAQ,OACOR,EADP,OAEGH,EAAaG,MAdtB,IAAK,IAAIA,KAASoH,EAAUnE,EAAnBjD,GAmBT,OAAO2E,8CAGW,IAAA0C,EAAAhB,KACdiB,EAAS,GAYb,OAXAjB,KAAKtB,MAAMpF,SAASQ,QAAQ,SAAAC,GAC1BkH,EAAOjH,KAAK4E,EAAAhE,EAAAiE,cAAA,OAAKG,IAAG,SAAA7E,OAAWJ,IAC7B6E,EAAAhE,EAAAiE,cAAA,SACEqC,KAAK,WACLpG,GAAIf,EACJmB,KAAMnB,EACNmF,SAAU,SAACC,GAAD,OAAO6B,EAAKZ,cAAcjB,MAErCpF,MAGEkH,0CAGOF,GAAU,IAAAI,EAAAnB,KACpB1B,EAAQ,GA8BZ,OA7BAyC,EAASjH,QAAQ,SAAAC,GACf,IACIqH,EADgBD,EAAKzC,MAAM2C,eAAetH,EAAMoH,EAAKzC,MAAMiC,YACnCW,IAAI,SAAAlI,GAC9B,OACEwF,EAAAhE,EAAAiE,cAAA,UACEI,UAAS,GAAA9E,OAAKgH,EAAKzC,MAAMf,WAAW5D,EAAMX,EAAQ8B,MAAQ,QAAU,UACpEqG,QAAS,kBAAMJ,EAAKzC,MAAMU,gBAAgBhG,EAAQ8B,OAClD8D,IAAG,QAAA7E,OAAUf,EAAQ8B,KAAlB,KAAAf,OAA0BJ,IAE7B6E,EAAAhE,EAAAiE,cAACS,EAAD,CACEpE,KAAM9B,EAAQ8B,UAKtBoD,EAAMtE,KACJ4E,EAAAhE,EAAAiE,cAAA,OACEI,UAAU,iBACVD,IAAG,GAAA7E,OAAKgH,EAAKzC,MAAMxD,KAAhB,KAAAf,OAAwBJ,IAE3B6E,EAAAhE,EAAAiE,cAAA,OAAKI,UAAU,aACZlF,EADH,KAGA6E,EAAAhE,EAAAiE,cAAA,OAAKI,UAAU,oBACZmC,OAKF9C,6CAGU,IACTiC,EAAiBP,KAAKM,MAAtBC,aADSiB,EAE2CxB,KAAKtB,MAAzDiC,EAFSa,EAETb,WAAYU,EAFHG,EAEGH,eAAgBhD,EAFnBmD,EAEmBnD,oBAChCoD,EAAgB,GACpB,OAAQlB,EAAa/E,QACnB,KAAK,EAAGiG,EAAgBJ,EAAed,EAAa,GAAII,GAAa,MACrE,KAAK,EACL,KAAK,EACL,KAAK,EAAGc,EAAgBpD,EAAoBkC,EAAcI,GAG5D,IAAIe,EAAgB,GAQpB,OAPAD,EAAc3H,QAAQ,SAAAV,GACpBsI,EAAc1H,KACZ4E,EAAAhE,EAAAiE,cAACS,EAAD,CACEpE,KAAM9B,EAAQ8B,UAIbwG,SA5IaC,aCuCTC,6MANbxC,gBAAkB,SAAChG,GACjByI,OAAOC,SAAS,EAAG,GACnBhC,EAAKpB,MAAMqD,QAAQ/H,KAAnB,GAAAG,OAA2B6B,EAAe5C,8EA9BnC,IAAA4H,EAAAhB,KACP,OACEpB,EAAAhE,EAAAiE,cAAA,OAAKI,UAAU,4BACbL,EAAAhE,EAAAiE,cAACe,EAAD,CACER,gBAAiBY,KAAKZ,kBAExBR,EAAAhE,EAAAiE,cAACmD,EAAA,EAAD,CACEC,KAAI,GAAA9H,OAAK6F,KAAKtB,MAAMwD,MAAhB,aACJC,OAAQ,SAAAC,GAAe,IAAZC,EAAYD,EAAZC,MACT,OAAOzD,EAAAhE,EAAAiE,cAACyD,EAAD,CACLtD,IAAG,GAAA7E,OAAKd,EAAQgJ,EAAME,OAAOnJ,SAAS2F,cACtC4B,WAAYtH,EAAQgJ,EAAME,OAAOnJ,SAAS8B,KAC1CA,KAAM7B,EAAQgJ,EAAME,OAAOnJ,SAAS2F,aACpC/B,UAAW3D,EAAQgJ,EAAME,OAAOnJ,SAASmD,WAAW,GACpDU,UAAW5D,EAAQgJ,EAAME,OAAOnJ,SAASmD,WAAW,GACpDjD,SAAUD,EAAQgJ,EAAME,OAAOnJ,SAASG,UACxCC,aAAcH,EAAQgJ,EAAME,OAAOnJ,SAASM,QAC5C2H,eAAgBlF,EAAOmB,YACvB8B,gBAAiB4B,EAAK5B,gBACtBzB,WAAYxB,EAAOwB,WACnBU,oBAAqBlC,EAAOkC,iCArBxBsD,aCAdI,EAAUS,cAEdC,IAASN,OACPvD,EAAAhE,EAAAiE,cAACmD,EAAA,EAAD,CACED,QAASA,EACTW,SAAUjD,qBAEVb,EAAAhE,EAAAiE,cAAC8D,EAAD,CACET,MAAOzC,oBACPsC,QAASA,KAGXa,SAASC,eAAe","file":"static/js/main.1e885245.chunk.js","sourcesContent":["import Pokedex from './pokedex.json';\r\n\r\nfunction getDistinctMoves(pokemon) {\r\n  if (Pokedex[pokemon]) {\r\n    let eggMoves = Pokedex[pokemon].egg_moves ? Pokedex[pokemon].egg_moves : [];\r\n    let learnedMoves = getMoveset(pokemon);\r\n    let allMoves = eggMoves.concat(learnedMoves);\r\n    return [...new Set(allMoves)];\r\n  } else {\r\n    console.log(`Pokemon could not be found: ${pokemon}`);\r\n    return [];\r\n  }\r\n}\r\n\r\nfunction getMoveset(pokemon) {\r\n  let learnedMovesObject = Pokedex[pokemon].moveset;\r\n  let learnedMoves = [];\r\n  for (let level in learnedMovesObject) {\r\n    if (Array.isArray(Pokedex[pokemon].moveset[level])) {\r\n      Pokedex[pokemon].moveset[level].forEach(move => {\r\n        learnedMoves.push(move);\r\n      });\r\n    } else {\r\n      learnedMoves.push(Pokedex[pokemon].moveset[level]);\r\n    }\r\n  }\r\n  return learnedMoves;\r\n}\r\n\r\nfunction sortByID(pokemonArray) {\r\n  return pokemonArray.sort((a, b) => a.id - b.id);\r\n}\r\n\r\nfunction removeSelf(pokemonArray, pokemonName) {\r\n  return pokemonArray.filter(pokemon => pokemon.name !== pokemonName);\r\n}\r\n\r\nfunction removeGroup(pokemonArray, pokemonNames) {\r\n  return pokemonArray.filter(pokemon => {\r\n    return !pokemonNames.includes(pokemon.name);\r\n  });\r\n}\r\n\r\nfunction compareArrays(array1, array2, array3 = null, array4 = null) {\r\n  let finalArray = [];\r\n  array1.forEach(element1 => {\r\n    array2.forEach(element2 => {\r\n      if (array3) {\r\n        array3.forEach(element3 => {\r\n\r\n          if (array4) {\r\n            array4.forEach(element4 => {\r\n              if (element1 === element2 && element2 === element3 && element3 === element4) {\r\n                finalArray.push(element1);\r\n              }\r\n            });\r\n          } else {\r\n            if (element1 === element2 && element2 === element3) {\r\n              finalArray.push(element1);\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        if (element1 === element2) {\r\n          finalArray.push(element1);\r\n        }\r\n      }\r\n    });\r\n  });\r\n  return finalArray;\r\n}\r\n\r\nexport function searchableName(pokemon) {\r\n  return pokemon\r\n    .replace(/\\s+/g, '-')\r\n    .replace(/[.,':\\s]/g, \"\")\r\n    .replace(/♀/g, \"-f\")\r\n    .replace(/♂/g, \"-m\")\r\n    .toLowerCase();\r\n}\r\n\r\n\r\nconst Search = {\r\n\r\n  byEggGroup(eggGroup) {\r\n    let inGroup = [];\r\n    for (let pokemon in Pokedex) {\r\n      if (Pokedex[pokemon].egg_groups[0] === eggGroup || Pokedex[pokemon].egg_groups[1] === eggGroup) {\r\n        inGroup.push(Pokedex[pokemon]);\r\n      }\r\n    }\r\n    return inGroup;\r\n  },\r\n\r\n  byMove(move, searchArray = Pokedex) {\r\n    let hasMove = [];\r\n    if (Array.isArray(searchArray)) {\r\n      searchArray.forEach(pokemon => {\r\n        const moves = getDistinctMoves(pokemon.name);\r\n        moves.forEach(moveName => {\r\n          if (moveName.toLowerCase() === move.toLowerCase()) {\r\n            hasMove.push(Pokedex[pokemon.name]);\r\n          }\r\n        });\r\n      })\r\n    } else {\r\n      for (let pokemon in Pokedex) {\r\n        const moves = getDistinctMoves(pokemon);\r\n        moves.forEach(moveName => {\r\n          if (moveName.toLowerCase() === move.toLowerCase()) {\r\n            hasMove.push(Pokedex[pokemon]);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return hasMove;\r\n  },\r\n\r\n  byPokemon(pokemon) {\r\n    for (let pkmn in Pokedex) {\r\n      let name = searchableName(pokemon);\r\n      if (Pokedex[pkmn].name === name) {\r\n        return Pokedex[pkmn];\r\n      }\r\n    }\r\n  },\r\n\r\n  byEggAndMove(move = null, eggGroup1, eggGroup2 = null) {\r\n    let byMoves = [];\r\n    if (move) {\r\n      byMoves = Search.byMove(move);\r\n    }\r\n    let byEggGroup = [];\r\n    if (eggGroup2) {\r\n      const byEggGroup1 = Search.byEggGroup(eggGroup1);\r\n      const byEggGroup2 = Search.byEggGroup(eggGroup2);\r\n\r\n      byEggGroup = byEggGroup1.filter(pokemon => {\r\n        return byEggGroup2.includes(pokemon);\r\n      });\r\n    } else {\r\n      byEggGroup = Search.byEggGroup(eggGroup1);\r\n    }\r\n\r\n    if (!move) {\r\n      return byEggGroup;\r\n    } else {\r\n      return byEggGroup.filter(pokemon => {\r\n        return byMoves.includes(pokemon);\r\n      });\r\n    }\r\n  },\r\n\r\n  forEggMoves(move, pokemonName) {\r\n    const relatedPokemonGroup1 = Search.byEggAndMove(move, Pokedex[pokemonName].egg_groups[0]);\r\n\r\n    if (Pokedex[pokemonName].egg_groups[1]) {\r\n      const relatedPokemonGroup2 = Search.byEggAndMove(move, Pokedex[pokemonName].egg_groups[1]);\r\n\r\n      let combine = relatedPokemonGroup1.concat(relatedPokemonGroup2);\r\n      return sortByID([...new Set(combine)]);\r\n\r\n    } else if (Pokedex[pokemonName].egg_groups[0] === \"Undiscovered\") {\r\n      if (Pokedex[pokemonName].evolutions) {\r\n        let name = searchableName(Pokedex[pokemonName].evolutions[0][0]);\r\n        return Search.forEggMoves(move, name);\r\n      } else {\r\n        return [];\r\n      }\r\n    } else {\r\n      return sortByID(relatedPokemonGroup1);\r\n    }\r\n  },\r\n\r\n  isEggChain(move, pokemonName) {\r\n    let entry = Pokedex[pokemonName];\r\n    if (!entry.egg_moves) {\r\n      return false\r\n    }\r\n    let isEggChain = false;\r\n    entry.egg_moves.forEach(moveName => {\r\n      if (moveName === move) {\r\n        isEggChain = true;\r\n        return;\r\n      }\r\n    });\r\n    return isEggChain;\r\n  },\r\n\r\n  createQuickestEggChain(move, pokemonName, chain = [], firstPass = true) {\r\n    //Goal: Return an array in order of chain needed\r\n    let moveGroup = Search.forEggMoves(move, pokemonName);\r\n\r\n    if (!firstPass) {\r\n      //start incorportating the chains\r\n      chain.push(pokemonName);\r\n\r\n      let breedables = removeGroup(moveGroup, chain);\r\n      let continueChain = breedables.filter(pokemon => {\r\n        return Search.isEggChain(move, pokemon.name);\r\n      })\r\n      let endOfChain = breedables.filter(pokemon => {\r\n        return !Search.isEggChain(move, pokemon.name);\r\n      });\r\n\r\n      if (endOfChain.length) {\r\n        return [...chain, endOfChain[0].name];\r\n      } else {\r\n        if (continueChain.length) {\r\n          return Search.createQuickestEggChain(move, continueChain[0].name, chain, false);\r\n        }\r\n        else {\r\n          return [\"No source found. Either a pokemon in this chain needs to learn it by TM or be have a parent from a previous generation.\"];\r\n        }\r\n      }\r\n    } else {\r\n      //First Pass\r\n      let breedables = removeSelf(moveGroup, pokemonName);\r\n      let continueChain = breedables.filter(pokemon => {\r\n        return Search.isEggChain(move, pokemon.name);\r\n      })\r\n      let endOfChain = breedables.filter(pokemon => {\r\n        return !Search.isEggChain(move, pokemon.name);\r\n      });\r\n\r\n      if (endOfChain.length) {\r\n        return [Pokedex[pokemonName], endOfChain[0]];\r\n      } else {\r\n        //if no pokemon can end the chain, move to the next pokemon in next pass\r\n        return Search.createQuickestEggChain(move, continueChain[0].name, [pokemonName], false);\r\n      }\r\n    }\r\n  },\r\n\r\n  createMultiEggChain(moves, pokemonName) {\r\n    //Hard coded to only take 4 moves, not nice but can't find an alternative\r\n    let moveGroups = [];\r\n    moves.forEach(move => {\r\n      moveGroups.push(Search.forEggMoves(move, pokemonName));\r\n    });\r\n    let matches = [];\r\n    switch (moves.length) {\r\n      case 1: matches = moveGroups; break;\r\n      case 2: matches = compareArrays(moveGroups[0], moveGroups[1]); break;\r\n      case 3: matches = compareArrays(moveGroups[0], moveGroups[1], moveGroups[2]); break;\r\n      case 4: matches = compareArrays(moveGroups[0], moveGroups[1], moveGroups[2], moveGroups[3]); break;\r\n      default: matches = moveGroups; break;\r\n    }\r\n    return [...new Set(removeSelf(matches, pokemonName))];\r\n  }\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport Pokedex from '../pokedex.json';\r\n\r\nexport default function PKMNSelect(props) {\r\n  let options = [];\r\n  for (let pokemon in Pokedex) {\r\n    options.push(<option\r\n      value={Pokedex[pokemon].display_name}\r\n      key={pokemon}\r\n    >\r\n      {Pokedex[pokemon].display_name}\r\n    </option>)\r\n  }\r\n  return (\r\n    <div\r\n      className=\"select\"\r\n      onChange={e => props.searchByPokemon(e.target.value)}\r\n    >\r\n      <select>\r\n        {options}\r\n      </select>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function Sprite(props) {\r\n  const imageName = props.name\r\n    .replace(/\\s+/g, '-')\r\n    .replace(/[.,':\\s]/g, \"\")\r\n    .replace(/♀/g, \"-f\")\r\n    .replace(/♂/g, \"-m\")\r\n    .toLowerCase();\r\n  return (\r\n    <img\r\n      src={`${process.env.PUBLIC_URL}/regular/${imageName}.png`}\r\n      alt={props.name}\r\n      title={props.name} />\r\n  );\r\n}","import React from 'react';\r\n\r\nimport PKMNSelect from './PKMNSelect';\r\nimport Sprite from './Sprite';\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <header className=\"h-center\">\r\n      <PKMNSelect\r\n        searchByPokemon={props.searchByPokemon}\r\n      />\r\n      <div className=\"use-text\">\r\n        Use the selector above to choose a pokemon to look at the moves learned and egg move information. If an evolution, please look to the lowest evolution for egg moves. (Exceptions being pokemon like Marill who have different egg moves to it's baby form Azurill)\r\n          <div className=\"flex h-center\">\r\n          <div className=\"circle\">\r\n            <Sprite\r\n              name=\"marill\"\r\n            />\r\n          </div>\r\n          If the pokemon has a red background, that means the pokemon can only pass down the egg move from learning that move as an egg move itself, aka, is part of a breeding chain.\r\n           </div>\r\n        If a move only contains the pokemon listed, it means that it can only learn the move from the same pokemon who learned it in a previous generation. This data uses Sun and Moon.\r\n        Hover over a pokemon to get it's searchable name or press the pokemon to go to their page.\r\n        </div>\r\n    </header>\r\n  );\r\n}","import React, { Component } from 'react';\r\n\r\nimport Sprite from './Sprite';\r\n\r\nclass PKMNEntry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      compareMoves: [],\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"entry\">\r\n        <div>\r\n          <Sprite name={this.props.searchName} />\r\n          {this.props.name}\r\n          <div className=\"group\">\r\n            {this.props.eggGroup1}\r\n            {this.props.eggGroup2\r\n              ? ` | ${this.props.eggGroup2}`\r\n              : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"move-list flex space-between\">\r\n          <div>\r\n            <h4>Learned Moves</h4>\r\n            {this.displayLearnedMoves(this.props.learnedMoves)}\r\n          </div>\r\n          <div className=\"move-select\">\r\n            Select up to four egg moves.\r\n              <form>\r\n              {this.props.eggMoves ? this.displayCheckboxes() : \"No egg moves to choose.\"}\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            {this.displayEggChains()}\r\n          </div>\r\n          <h4>Egg Moves</h4>\r\n          {this.props.eggMoves\r\n            ? this.displayEggMoves(this.props.eggMoves)\r\n            : 'See lower evolution for egg moves.'}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  displayLearnedMoves(moveList) {\r\n    const { learnedMoves } = this.props;\r\n    let moves = [];\r\n    for (let level in moveList) {\r\n      if (Array.isArray(learnedMoves[level])) {\r\n        learnedMoves[level].forEach(move => {\r\n          moves.push(\r\n            <div key={`${level}-${move}`}>\r\n              {`[${level}]: `}\r\n              {move}\r\n            </div>\r\n          );\r\n        })\r\n      } else {\r\n        moves.push(\r\n          <div key={`${level}-${learnedMoves[level]}`}>\r\n            {`[${level}]: `}\r\n            {learnedMoves[level]}\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n    return moves;\r\n  }\r\n\r\n  displayCheckboxes() {\r\n    let inputs = [];\r\n    this.props.eggMoves.forEach(move => {\r\n      inputs.push(<div key={`input-${move}`}>\r\n        <input\r\n          type=\"checkbox\"\r\n          id={move}\r\n          name={move}\r\n          onChange={(e) => this.populateMoves(e)}\r\n        />\r\n        {move}\r\n      </div>);\r\n    });\r\n    return inputs;\r\n  }\r\n\r\n  displayEggMoves(moveList) {\r\n    let moves = [];\r\n    moveList.forEach(move => {\r\n      let pkmnWithChain = this.props.searchEggMoves(move, this.props.searchName);\r\n      let sprites = pkmnWithChain.map(pokemon => {\r\n        return (\r\n          <button\r\n            className={`${this.props.isEggChain(move, pokemon.name) ? 'chain' : 'normal'}`}\r\n            onClick={() => this.props.searchByPokemon(pokemon.name)}\r\n            key={`icon-${pokemon.name}-${move}`}\r\n          >\r\n            <Sprite\r\n              name={pokemon.name}\r\n            />\r\n          </button>\r\n        )\r\n      })\r\n      moves.push(\r\n        <div\r\n          className=\"flex egg-moves\"\r\n          key={`${this.props.name}-${move}`}\r\n        >\r\n          <div className=\"move-name\">\r\n            {move}:\r\n          </div>\r\n          <div className=\"wrap sprite-list\">\r\n            {sprites}\r\n          </div>\r\n        </div>\r\n      )\r\n    });\r\n    return moves;\r\n  }\r\n\r\n  displayEggChains() {\r\n    const { compareMoves } = this.state;\r\n    const { searchName, searchEggMoves, createMultiEggChain } = this.props;\r\n    let listedPokemon = [];\r\n    switch (compareMoves.length) {\r\n      case 1: listedPokemon = searchEggMoves(compareMoves[0], searchName); break;\r\n      case 2:\r\n      case 3:\r\n      case 4: listedPokemon = createMultiEggChain(compareMoves, searchName); break;\r\n      default: break;\r\n    }\r\n    let spriteDisplay = [];\r\n    listedPokemon.forEach(pokemon => {\r\n      spriteDisplay.push(\r\n        <Sprite\r\n          name={pokemon.name}\r\n        />\r\n      );\r\n    });\r\n    return spriteDisplay;\r\n  }\r\n\r\n  populateMoves = (e) => {\r\n    let clone = this.state.compareMoves;\r\n    if (e.target.checked) {\r\n      clone.push(e.target.name)\r\n      this.setState({ compareMoves: clone });\r\n    } else {\r\n      if (clone.includes(e.target.name)) {\r\n        let compareMoves = clone.filter(move => {\r\n          return move !== e.target.name;\r\n        });\r\n        this.setState({ compareMoves });\r\n      } else {\r\n        console.log(\"The move wasn't in the array in the first place?\");\r\n      }\r\n    }\r\n    this.displayEggChains();\r\n  }\r\n}\r\n\r\nexport default PKMNEntry;","import React, { Component } from 'react';\nimport Search, { searchableName } from './search.js';\nimport { Route } from 'react-router-dom';\nimport Pokedex from './pokedex.json';\n\nimport Header from './components/Header';\nimport PKMNEntry from './components/PKMNEntry';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app flex column h-center\">\n        <Header\n          searchByPokemon={this.searchByPokemon}\n        />\n        <Route\n          path={`${this.props.route}/:pokemon`}\n          render={({ match }) => {\n            return <PKMNEntry\n              key={`${Pokedex[match.params.pokemon].display_name}`}\n              searchName={Pokedex[match.params.pokemon].name}\n              name={Pokedex[match.params.pokemon].display_name}\n              eggGroup1={Pokedex[match.params.pokemon].egg_groups[0]}\n              eggGroup2={Pokedex[match.params.pokemon].egg_groups[1]}\n              eggMoves={Pokedex[match.params.pokemon].egg_moves}\n              learnedMoves={Pokedex[match.params.pokemon].moveset}\n              searchEggMoves={Search.forEggMoves}\n              searchByPokemon={this.searchByPokemon}\n              isEggChain={Search.isEggChain}\n              createMultiEggChain={Search.createMultiEggChain}\n            />\n          }\n          } />\n      </div>\n    );\n  }\n\n  searchByPokemon = (pokemon) => {\n    window.scrollTo(0, 0);\n    this.props.history.push(`${searchableName(pokemon)}`);\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport './style.scss';\n\nimport App from './App';\n\nlet history = createBrowserHistory();\n\nReactDOM.render(\n  <Router\n    history={history}\n    basename={process.env.PUBLIC_URL}\n  >\n    <App\n      route={process.env.PUBLIC_URL}\n      history={history}\n    />\n  </Router>\n  , document.getElementById('root'));\n"],"sourceRoot":""}